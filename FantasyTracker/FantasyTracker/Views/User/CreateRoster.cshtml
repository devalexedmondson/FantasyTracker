@model FantasyTracker.Models.CreateRosterViewModel
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "CreateRoster";
}

<h2>Add Players</h2>

@using (Html.BeginForm("CreateRoster", "User", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <p>Please select the team that your player is on</p>
    @*<div class="form-group">
        <div class="col-md-10">
           @Html.LabelFor(m => m.Teams)
           @Html.DropDownListFor(m=> m.Teams, new SelectList(Model.Teams, "Id", "TeamName"), "Select Team", new { @class = "form-control"})
        </div>
    </div>*@

    <p>Please type in the name of the player that you would like to add.</p>
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(m => m.PlayerName)
            @Html.TextBoxFor(m => m.PlayerName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Enter" />
        </div>
    </div>
}
@*
    @Html.HiddenFor(m => m.data, new { @id = "playerData" })
    <div id="PlayerInfo">
        <script>
            document.getElementById('playerData');
            document.getElementById('playerData').value;
            var data = document.getElementById('playerData').value
            JSON.stringify(data)
            document.getElementById('playerData').value;
            var dataObject = JSON.parse(data)
            dataObject.date
            var game3 = dataObject.games[3].away_points
            document.getElementById('PlayerInfo');
            document.getElementById('PlayerInfo').innerHTML = game3;
        </script>
    </div>

  

        1)  get value from hidden fields document.getElementById('gameData');
        2)  parse data to JSON Object (JSON.parse(value from hidden field))
        3)  Display shit  (jQuery ofr vanila JS )
            *How to put data in input field (vanilla JS?)
                -put fields on page via the view (DOM manipulation)
                -Create DOM elements on the fly in code (Use jQuery)
        forEach through string
        document.getElementById('GameInfo').innerHTML = '<ul><li>cock</li><li>balls</li></ul>';

*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
